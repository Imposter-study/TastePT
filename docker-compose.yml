services:
  django_app:
    build:
      context: .
    container_name: django_app
    env_file:
      - .env
    environment:
      - DJANGO_ENV=production
    ports:
      - "8000:8000"
    networks:
      - app_network
    volumes:
      - .:/app
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000

  node_server:
    build:
      context: ./node_server
      dockerfile: Dockerfile
    container_name: node_websocket
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DJANGO_SERVER_URL=http://django_app:8000
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ./node_server:/app
    depends_on:
      - django_app
    networks:
      - app_network
    restart: unless-stopped
    command: npm start

  celery:
    build: .
    container_name: celery
    command: celery -A config.celery worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - django_app
    networks:
      - app_network
    env_file:
      - .env

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - django_app
      - node_server
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: